package com.fourthskyinteractive.dx4j.dxgi.device;
import static org.bridj.Pointer.allocate;

import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.ann.Virtual;
import org.bridj.cpp.com.COMRuntime;
import org.bridj.cpp.com.IID;

import com.fourthskyinteractive.dx4j.dxgi.DXGIException;
import com.fourthskyinteractive.dx4j.windows.HANDLE;
/**
 * <i>native declaration : DXGI.h:419</i><br>
 * Error: Conversion Error : uuid("aec22fb8-76f3-4639-9be0-28eb43a67a2e") novtable struct IDXGIObject {<br>
 * 	/// Original signature : <code>int SetPrivateData(const GUID&, UINT, const void*)</code><br>
 * 	virtual int SetPrivateData(const GUID& Name, UINT DataSize, const void* pData);<br>
 * 	/// Original signature : <code>int SetPrivateDataInterface(const GUID&, const IUnknown*)</code><br>
 * 	virtual int SetPrivateDataInterface(const GUID& Name, const IUnknown* pUnknown);<br>
 * 	/// Original signature : <code>int GetPrivateData(const GUID&, UINT*, void*)</code><br>
 * 	virtual int GetPrivateData(const GUID& Name, UINT* pDataSize, void* pData);<br>
 * 	/// Original signature : <code>int GetParent(const IID&, void**)</code><br>
 * 	virtual int GetParent(const IID& riid, void** ppParent);<br>
 * } (Cannot find parent IUnknown of struct uuid("aec22fb8-76f3-4639-9be0-28eb43a67a2e") novtable struct IDXGIObject {<br>
 * 	/// Original signature : <code>int SetPrivateData(const GUID&, UINT, const void*)</code><br>
 * 	virtual int SetPrivateData(const GUID& Name, UINT DataSize, const void* pData);<br>
 * 	/// Original signature : <code>int SetPrivateDataInterface(const GUID&, const IUnknown*)</code><br>
 * 	virtual int SetPrivateDataInterface(const GUID& Name, const IUnknown* pUnknown);<br>
 * 	/// Original signature : <code>int GetPrivateData(const GUID&, UINT*, void*)</code><br>
 * 	virtual int GetPrivateData(const GUID& Name, UINT* pDataSize, void* pData);<br>
 * 	/// Original signature : <code>int GetParent(const IID&, void**)</code><br>
 * 	virtual int GetParent(const IID& riid, void** ppParent);<br>
 * })<br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@IID("035f3ab4-482e-4e50-b41f-8a7f8bd8960b") 
@Library("dxgi") 
@Runtime(COMRuntime.class)
public class IDXGIResource extends IDXGIDeviceSubObject {
	public IDXGIResource() {
		super();
	}
//	public IDXGIResource(Pointer pointer) {
//		super(pointer);
//	}
	@Deprecated @Virtual(0) 
	public native int GetSharedHandle(Pointer<HANDLE> pSharedHandle);
	@Virtual(1) 
	public native int GetUsage(Pointer<Integer> pUsage);
	@Virtual(2) 
	public native int SetEvictionPriority(int EvictionPriority);
	@Virtual(3) 
	public native int GetEvictionPriority(Pointer<Integer > pEvictionPriority);
	
	public final HANDLE GetSharedHandle() {
		Pointer<HANDLE> pHandle = allocate(HANDLE.class);
		try {
			int result = this.GetSharedHandle(pHandle);
			if (result != 0) {
				throw new DXGIException("Could not get shared handle", result);
			}
			
			return pHandle.get();
		} finally {
			pHandle.release();
			pHandle = null;
		}
	}
}
